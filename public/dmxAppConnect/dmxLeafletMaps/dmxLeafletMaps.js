/*!
 App Connect Leaflet Maps
 Version: 1.0.6
 (c) 2025 Wappler.io
 @build 2025-02-13 15:31:28
 */
const LEAFLET_PROVIDERS=new Map([["OpenStreetMap",{urlTemplate:"https://tile.openstreetmap.org/{z}/{x}/{y}.png",attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',maxZoom:19}],["OpenStreetMap DE",{urlTemplate:"https://{s}.tile.openstreetmap.de/tiles/osmde/{z}/{x}/{y}.png",attribution:'&copy; <a href="https://www.openstreetmap.de/karte.html">OpenStreetMap DE</a> contributors',maxZoom:18}],["OpenStreetMap FR",{urlTemplate:"https://{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png",attribution:'&copy; OpenStreetMap France | &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',maxZoom:20}],["OpenStreetMap HOT",{urlTemplate:"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png",attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, Tiles style by <a href="https://www.hotosm.org/" target="_blank">Humanitarian OpenStreetMap Team</a> hosted by <a href="https://openstreetmap.fr/" target="_blank">OpenStreetMap France</a>',maxZoom:19}],["OpenTopoMap",{urlTemplate:"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png",attribution:'Map data: {attribution.OpenStreetMap}, <a href="http://viewfinderpanoramas.org">SRTM</a> | Map style: &copy; <a href="https://opentopomap.org">OpenTopoMap</a> (<a href="https://creativecommons.org/licenses/by-sa/3.0/">CC-BY-SA</a>)',maxZoom:17}],["Stadia Alidade Smooth",{urlTemplate:"https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png",attribution:'&copy; <a href="https://stadiamaps.com/" target="_blank">Stadia Maps</a> &copy; <a href="https://openmaptiles.org/" target="_blank">OpenMapTiles</a> &copy; <a href="https://www.openstreetmap.org/copyright" target="_blank">OpenStreetMap</a>',maxZoom:20}],["Stadia Alidade Smooth Dark",{urlTemplate:"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png",attribution:'&copy; <a href="https://stadiamaps.com/" target="_blank">Stadia Maps</a> &copy; <a href="https://openmaptiles.org/" target="_blank">OpenMapTiles</a> &copy; <a href="https://www.openstreetmap.org/copyright" target="_blank">OpenStreetMap</a>',maxZoom:20}],["Stadia Outdoors",{urlTemplate:"https://tiles.stadiamaps.com/tiles/outdoors/{z}/{x}/{y}{r}.png",attribution:'&copy; <a href="https://stadiamaps.com/" target="_blank">Stadia Maps</a> &copy; <a href="https://openmaptiles.org/" target="_blank">OpenMapTiles</a> &copy; <a href="https://www.openstreetmap.org/copyright" target="_blank">OpenStreetMap</a>',maxZoom:20}],["Stadia Stamen Toner",{urlTemplate:"https://tiles.stadiamaps.com/tiles/stamen_toner/{z}/{x}/{y}{r}.png",attribution:'&copy; <a href="https://stadiamaps.com/" target="_blank">Stadia Maps</a> &copy; <a href="https://stamen.com/" target="_blank">Stamen Design</a> &copy; <a href="https://openmaptiles.org/" target="_blank">OpenMapTiles</a> &copy; <a href="https://www.openstreetmap.org/copyright" target="_blank">OpenStreetMap</a>',maxZoom:20}],["Stadia Stamen Toner Lite",{urlTemplate:"https://tiles.stadiamaps.com/tiles/stamen_toner_lite/{z}/{x}/{y}{r}.png",attribution:'&copy; <a href="https://stadiamaps.com/" target="_blank">Stadia Maps</a> &copy; <a href="https://stamen.com/" target="_blank">Stamen Design</a> &copy; <a href="https://openmaptiles.org/" target="_blank">OpenMapTiles</a> &copy; <a href="https://www.openstreetmap.org/copyright" target="_blank">OpenStreetMap</a>',maxZoom:20}],["Stadia Stamen Watercolor",{urlTemplate:"https://tiles.stadiamaps.com/tiles/stamen_watercolor/{z}/{x}/{y}.jpg",attribution:'&copy; <a href="https://stadiamaps.com/" target="_blank">Stadia Maps</a> &copy; <a href="https://stamen.com/" target="_blank">Stamen Design</a> &copy; <a href="https://www.openstreetmap.org/copyright" target="_blank">OpenStreetMap</a>',maxZoom:16}],["Stadia Stamen Terrain",{urlTemplate:"https://tiles.stadiamaps.com/tiles/stamen_terrain/{z}/{x}/{y}{r}.png",attribution:'&copy; <a href="https://stadiamaps.com/" target="_blank">Stadia Maps</a> &copy; <a href="https://stamen.com/" target="_blank">Stamen Design</a> &copy; <a href="https://openmaptiles.org/" target="_blank">OpenMapTiles</a> &copy; <a href="https://www.openstreetmap.org/copyright" target="_blank">OpenStreetMap</a>',maxZoom:20}],["Stadia OSM Bright",{urlTemplate:"https://tiles.stadiamaps.com/tiles/osm_bright/{z}/{x}/{y}{r}.png",attribution:'&copy; <a href="https://stadiamaps.com/" target="_blank">Stadia Maps</a> &copy; <a href="https://openmaptiles.org/" target="_blank">OpenMapTiles</a> &copy; <a href="https://www.openstreetmap.org/copyright" target="_blank">OpenStreetMap</a>',maxZoom:20}]]);dmx.Component("leaflet-map",{initialData:{latitude:null,longitude:null,zoom:null},attributes:{preferCanvas:{type:Boolean,default:!1},layerControl:{type:Boolean,default:!1},attributionControl:{type:Boolean,default:!0},zoomControl:{type:Boolean,default:!0},zoomControlPosition:{type:String,default:"topleft",enum:["topleft","topright","bottomleft","bottomright"]},scaleControl:{type:Boolean,default:!1},scaleControlPosition:{type:String,default:"bottomleft",enum:["topleft","topright","bottomleft","bottomright"]},scaleControlMetric:{type:Boolean,default:!0},scaleControlImperial:{type:Boolean,default:!0},latitude:{type:Number,default:0},longitude:{type:Number,default:0},zoom:{type:Number,default:1},zoomDelta:{type:Number,default:1},keyboard:{type:Boolean,default:!0},scrollWheelZoom:{type:String,default:!0,enum:["true","false","center"]},doubleClickZoom:{type:String,default:"true",enum:["true","false","center"]},touchZoom:{type:String,default:void 0,enum:["true","false","center"]},tileProvider:{type:String,default:"OpenStreetMap"},enableClustering:{type:Boolean,default:!1},markers:{type:Array,default:void 0},markerId:{type:String,default:"id"},markerLatitude:{type:String,default:"latitude"},markerLongitude:{type:String,default:"longitude"},markerTooltip:{type:String,default:"tooltip"},markerPopup:{type:String,default:"popup"},markerGroup:{type:String,default:"group"},markerDraggable:{type:String,default:"draggable"},markerIcon:{type:String,default:"icon"},markerIconUrl:{type:String,default:"iconUrl"},markerColor:{type:String,default:"color"}},methods:{setView(t,e,o){this.map.setView([+t,+e],o)},setZoom(t){this.map.setZoom(t)},zoomIn(){this.map.zoomIn()},zoomOut(){this.map.zoomOut()},fitBounds(t){this.map.fitBounds(t)},fitWorld(){this.map.fitWorld()},panTo(t,e){this.map.panTo([+t,+e])},panBy(t,e){this.map.panBy([t,e])},flyTo(t,e,o){this.map.flyTo([+t,+e],o)},flyToBounds(t){this.map.flyToBounds(t)},setMaxBounds(t){this.map.setMaxBounds(t)},setMinZoom(t){this.map.setMinZoom(t)},setMaxZoom(t){this.map.setMaxZoom(t)},panInsideBounds(t){this.map.panInsideBounds(t)},panInside(t,e){this.map.panInside([+t,+e])},invalidateSize(t=!0){this.map.invalidateSize(t)},stop(){this.map.stop()},openPopup(t,e,o,a={}){L.popup(a).setLatLng([+t,+e]).setContent(o).openOn(this.map)},addMarker(t,e,o,a={}){a.id=t,a.latitude=e,a.longitude=o,this.addMarker(a)},removeMarker(t){this.markers=this.markers.filter((function(e){return e.id!=t||(e.remove().off(),!1)}))},removeAllMarkers(){this._removeAllMarkers()},openMarkerPopup(t){var e=this.findMarker(t);e&&e.openPopup()},closeMarkerPopup(t){var e=this.findMarker(t);e&&e.closePopup()},toggleMarkerPopup(t){var e=this.findMarker(t);e&&e.togglePopup()},fitMarkers(){var t=L.latLngBounds();this.markers.forEach((e=>t.extend(e.getLatLng()))),this.map.fitBounds(t)}},events:{zoomstart:Event,zoom:Event,zoomend:Event,movestart:Event,move:Event,moveend:Event,popupopen:Event,popupclose:Event,tooltipopen:Event,tooltipclose:Event,mapclick:Event,mapdblclick:Event,markerclick:Event,markerdblclick:Event,markermove:Event},init(){if(!document.getElementById("leaflet-styles")){const t=document.createElement("style");t.id="leaflet-styles",t.textContent="\n        .leaflet-marker-icon-pink {\n          filter: hue-rotate(120deg);\n        }\n        .leaflet-marker-icon-darkblue {\n          filter: hue-rotate(30deg);\n        }\n        .leaflet-marker-icon-lila {\n          filter: hue-rotate(50deg);\n        }\n        .leaflet-marker-icon-magenta {\n          filter: hue-rotate(90deg);\n        }\n        .leaflet-marker-icon-red {\n          filter: hue-rotate(140deg);\n        }\n        .leaflet-marker-icon-orange {\n          filter: hue-rotate(160deg);\n        }\n        .leaflet-marker-icon-brown {\n          filter: hue-rotate(190deg);\n        }\n        .leaflet-marker-icon-green {\n          filter: hue-rotate(260deg);\n        }\n        .leaflet-marker-icon-mint {\n          filter: hue-rotate(320deg);\n        }\n        .leaflet-marker-icon-custom {\n          width: 25px;\n          height: 25px;\n          color: #fff;\n          text-align: center;\n          line-height: 25px;\n          position: relative;\n          font-size: var(--icon-size);\n          text-shadow: 0 1px 0 rgba(0, 0, 0, 0.2);\n        }\n        .leaflet-marker-icon-custom > * {\n            position: relative;\n        }\n        .leaflet-marker-icon-custom::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 25px;\n            height: 25px;\n            background: linear-gradient(135deg, #4c9cd1, #126fc6);\n            background-color: #126fc6;\n            box-sizing: border-box;\n            border: 1px solid rgba(0, 0, 0, 0.2);\n            border-radius: 50% 50% 0 50%;\n            transform: rotate(45deg);\n        }\n      ",document.head.appendChild(t)}},render(t){if(this.$parse(t),t.textContent="",this.map=L.map(t,{preferCanvas:this.props.preferCanvas,attributionControl:this.props.attributionControl,zoomControl:!1,center:[this.props.latitude,this.props.longitude],zoom:this.props.zoom,keyboard:this.props.keyboard,scrollWheelZoom:this._toBooleanOrString(this.props.scrollWheelZoom,["center"]),doubleClickZoom:this._toBooleanOrString(this.props.doubleClickZoom,["center"]),touchZoom:this._toBooleanOrString(this.props.touchZoom,["center"])}),t.id&&(this.map.id=t.id),this.baseLayers={},this.overlays={},this.markers=[],"custom"==this.props.tileProvider){var e={};this.props.tileMinZoom&&(e.minZoom=this.props.tileMinZoom),this.props.tileMaxZoom&&(e.maxZoom=this.props.tileMaxZoom),this.props.tileSubdomains&&(e.subdomains=this.props.tileSubdomains),this.props.tileAttribution&&(e.attribution=this.props.tileAttribution),L.tileLayer(this.props.tileUrl,e).addTo(this.map)}else{var o=LEAFLET_PROVIDERS.get(this.props.tileProvider)||LEAFLET_PROVIDERS.get("OpenStreetMap");this._tileLayer=L.tileLayer(o.urlTemplate,o).addTo(this.map)}this.children.forEach((t=>{t instanceof dmx.Component("leaflet-marker")&&(this.markers.push(t._marker),this.addMarkerToMap(t._marker,t.props.group))})),this.props.layerControl&&(this.layerControl=L.control.layers(this.baseLayers,this.overlays).addTo(this.map)),this.props.zoomControl&&(this.zoomControl=L.control.zoom({position:this.props.zoomControlPosition}).addTo(this.map)),this.props.scaleControl&&(this.scaleControl=L.control.scale({position:this.props.scaleControlPosition,metric:this.props.scaleControlMetric,imperial:this.props.scaleControlImperial}).addTo(this.map)),this.map.on("zoomlevelschange",this.onEvent.bind(this)),this.map.on("zoomstart",this.onEvent.bind(this)),this.map.on("zoom",this.onEvent.bind(this)),this.map.on("zoomend",this.onEvent.bind(this)),this.map.on("movestart",this.onEvent.bind(this)),this.map.on("move",this.onEvent.bind(this)),this.map.on("moveend",this.onEvent.bind(this)),this.map.on("click",this.onMouseEvent.bind(this,"map")),this.map.on("dblclick",this.onMouseEvent.bind(this,"map")),this._updateData()},performUpdate(t){if((t.has("latitude")||t.has("longitude"))&&this.map.setView([this.props.latitude,this.props.longitude],this.props.zoom,{animate:!1}),t.has("zoom")&&this.map.setZoom(this.props.zoom,{animate:!1}),t.has("zoomControl")?(this.zoomControl&&(this.zoomControl.remove(),this.zoomControl=null),this.props.zoomControl&&(this.zoomControl=L.control.zoom({position:this.props.zoomControlPosition}).addTo(this.map))):this.zoomControl&&t.has("zoomControlPosition")&&this.zoomControl.setPosition(this.props.zoomControlPosition),t.has("scaleControl")||t.has("scaleControlMetric")||t.has("scaleControlImperial")?(this.scaleControl&&(this.scaleControl.remove(),this.scaleControl=null),this.props.scaleControl&&(this.scaleControl=L.control.scale({position:this.props.scaleControlPosition,metric:this.props.scaleControlMetric,imperial:this.props.scaleControlImperial}).addTo(this.map))):this.scaleControl&&t.has("scaleControlPosition")&&this.scaleControl.setPosition(this.props.scaleControlPosition),t.has("markers")&&(this._removeAllMarkers(),Array.isArray(this.props.markers)&&this.props.markers.forEach((t=>{var e=new dmx.DataScope(t,this);this.addMarker({id:dmx.parse(this.props.markerId,e),latitude:+dmx.parse(this.props.markerLatitude,e),longitude:+dmx.parse(this.props.markerLongitude,e),tooltip:dmx.parse(this.props.markerTooltip,e),popup:dmx.parse(this.props.markerPopup,e),group:dmx.parse(this.props.markerGroup,e),draggable:!!dmx.parse(this.props.markerDraggable,e),icon:dmx.parse(this.props.markerIcon,e),iconUrl:dmx.parse(this.props.markerIconUrl,e),color:dmx.parse(this.props.markerColor,e)})}))),t.has("tileProvider")){this._tileLayer&&(this._tileLayer.remove(),this._tileLayer=null);var e=LEAFLET_PROVIDERS.get(this.props.tileProvider)||LEAFLET_PROVIDERS.get("OpenStreetMap");this._tileLayer=L.tileLayer(e.urlTemplate,e).addTo(this.map)}},findMarker(t){return this.markers.find((function(e){return e.id==t}))},addMarkerToMap(t,e){t.remove(),e?(this.overlays[e]||(this.props.enableClustering?this.overlays[e]=L.markerClusterGroup().addTo(this.map):this.overlays[e]=L.layerGroup().addTo(this.map),this.layerControl&&this.layerControl.addOverlay(this.overlays[e],e)),t.addTo(this.overlays[e])):this.props.enableClustering?(this._markerCluster=this._markerCluster||L.markerClusterGroup().addTo(this.map),this._markerCluster.addLayer(t)):t.addTo(this.map)},addMarker(t){const e={};t.draggable&&(e.draggable=!0),t.iconUrl?e.icon=new L.Icon({iconUrl:t.iconUrl}):t.icon?(e.icon=new L.divIcon({className:"",iconSize:[25,30],iconAnchor:[12,30],tooltipAnchor:[16,-15],popupAnchor:[1,-25],html:`<div class="leaflet-marker-icon-custom">\n          <i class="${t.icon}">\n        </div>`}),t.color&&(e.icon.options.className="leaflet-marker-icon-"+t.color)):(e.icon=new L.Icon.Default,t.color&&(e.icon.options.className="leaflet-marker-icon-"+t.color));var o=L.marker([t.latitude,t.longitude],e);return t.static&&(o.static=!0),t.id&&(o.id=t.id),t.tooltip&&o.bindTooltip(t.tooltip),t.popup&&o.bindPopup(t.popup),o.on("click",this.onMouseEvent.bind(this,"marker")),o.on("dblclick",this.onMouseEvent.bind(this,"marker")),o.on("move",this.onMoveEvent.bind(this,"marker")),this.markers.push(o),this.addMarkerToMap(o,t.group),o},_removeAllMarkers(){this.markers=this.markers.filter((t=>!!t.static||(t.remove().off(),!1)))},_updateData(){var t=this.map.getCenter(),e=this.map.getZoom();this.set({latitude:t.lat,longitude:t.lng,zoom:e})},_toBooleanOrString:(t,e)=>e&&e.includes(t)?t:t&&"false"!=t&&"0"!=t,onEvent(t){this._updateData(),this.dispatchEvent(t.type,null,this.data)},onMoveEvent(t,e){this.dispatchEvent(t+e.type,null,{latitude:e.latlng.lat,longitude:e.latlng.lng,oldLatitude:e.oldLatLng.lat,oldLongitude:e.oldLatLng.lng})},onMouseEvent(t,e){this.dispatchEvent(t+e.type,null,{id:e.target.id,latitude:e.latlng.lat,longitude:e.latlng.lng,altKey:e.originalEvent.altKey,ctrlKey:e.originalEvent.ctrlKey,metaKey:e.originalEvent.metaKey,shiftKey:e.originalEvent.shiftKey,pageX:e.originalEvent.pageX,pageY:e.originalEvent.pageY,x:e.originalEvent.x||e.originalEvent.clientX,y:e.originalEvent.y||e.originalEvent.clientY})}}),dmx.Component("leaflet-marker",{initialData:{latitude:0,longitude:0},attributes:{latitude:{type:Number,default:0},longitude:{type:Number,default:0},tooltip:{type:String,default:null},popup:{type:String,default:null},group:{type:String,default:null},draggable:{type:Boolean,default:!1},icon:{type:String,default:null},iconUrl:{type:String,default:null},color:{type:String,default:"blue",enum:["blue","pink","darkblue","lila","magenta","red","orange","brown","green","mint"]}},events:{click:Event,dblclick:Event,move:Event},render:!1,init(){this._clickHandler=this._clickHandler.bind(this),this._moveHandler=this._moveHandler.bind(this);const t={};this.props.draggable&&(t.draggable=!0),this.props.iconUrl?t.icon=new L.Icon({iconUrl:this.props.iconUrl}):this.props.icon?(t.icon=new L.divIcon({className:"",iconSize:[25,30],iconAnchor:[12,30],tooltipAnchor:[16,-15],popupAnchor:[1,-25],html:`<div class="leaflet-marker-icon-custom">\n          <i class="${this.props.icon}">\n        </div>`}),this.props.color&&(t.icon.options.className="leaflet-marker-icon-"+this.props.color)):(t.icon=new L.Icon.Default,this.props.color&&(t.icon.options.className="leaflet-marker-icon-"+this.props.color)),this._marker=L.marker([this.props.latitude||0,this.props.longitude||0],t),this._marker.id=this.name,this._marker.static=!0,this._marker.on("click",this._clickHandler),this._marker.on("dblclick",this._clickHandler),this._marker.on("move",this._moveHandler),this.props.tooltip&&(this._marker.bindTooltip(this.props.tooltip),this._hasTooltip=!0),this.props.popup&&(this._marker.bindPopup(this.props.popup),this._hasPopup=!0),this._updateData()},performUpdate(t){(t.has("latitude")||t.has("longitude"))&&this._marker.setLatLng([this.props.latitude||0,this.props.longitude||0]),t.has("tooltip")&&(this._hasTooltip?(this._marker.unbindTooltip(),this._hasTooltip=!1):(this._marker.bindTooltip(this.props.tooltip),this._hasTooltip=!0)),t.has("popup")&&(this._hasPopup?(this._marker.unbindPopup(),this._hasPopup=!1):(this._marker.bindPopup(this.props.popup),this._hasPopup=!0)),t.has("draggable")&&this._marker.dragging[this.props.draggable?"enable":"disable"](),t.has("iconUrl")&&this._marker.setIcon(this.props.iconUrl?{iconUrl:this.props.iconUrl}:new L.Icon.Default),t.has("icon")&&this._marker.setIcon(this.props.icon?new L.divIcon({className:"",iconSize:[25,30],iconAnchor:[12,30],tooltipAnchor:[16,-15],popupAnchor:[1,-25],html:`<div class="leaflet-marker-icon-custom">\n          <i class="${this.props.icon}">\n        </div>`}):new L.Icon.Default),this._updateData()},destroy(){this._marker.remove(),this._hasTooltip&&this._marker.unbindTooltip(),this._hasPopup&&this._marker.unbindPopup(),this._marker.clearAllEventListeners()},_updateData(){var t=this._marker.getLatLng();this.set({latitude:t&&t.lat,longitude:t&&t.lng})},_moveHandler(t){this._updateData(),this.dispatchEvent(t.type,null,{latitude:t.latlng&&t.latlng.lat,longitude:t.latlng&&t.latlng.lng,oldLatitude:t.oldLatLng&&t.oldLatLng.lat,oldLongitude:t.oldLatLng&&t.oldLatLng.lng})},_clickHandler(t){this.dispatchEvent(t.type,null,{id:t.target.id,latitude:t.latlng&&t.latlng.lat,longitude:t.latlng&&t.latlng.lng,altKey:t.originalEvent.altKey,ctrlKey:t.originalEvent.ctrlKey,metaKey:t.originalEvent.metaKey,shiftKey:t.originalEvent.shiftKey,pageX:t.originalEvent.pageX,pageY:t.originalEvent.pageY,x:t.originalEvent.x||t.originalEvent.clientX,y:t.originalEvent.y||t.originalEvent.clientY})}});
//# sourceMappingURL=dmxLeafletMaps.js.map
