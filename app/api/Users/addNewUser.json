{
  "meta": {
    "options": {
      "linkedFile": "/views/admin/user/addNewUser.ejs",
      "linkedForm": "addUserForm"
    },
    "$_GET": [
      {
        "type": "text",
        "name": "sort"
      },
      {
        "type": "text",
        "name": "dir"
      }
    ],
    "$_POST": [
      {
        "type": "text",
        "fieldName": "fName",
        "options": {
          "rules": {
            "core:lettersonly": {
              "message": "Only letters are allowed"
            }
          }
        },
        "name": "fName"
      },
      {
        "type": "text",
        "fieldName": "lName",
        "options": {
          "rules": {
            "core:lettersonly": {
              "message": "Only letters are allowed"
            }
          }
        },
        "name": "lName"
      },
      {
        "type": "text",
        "fieldName": "email",
        "options": {
          "rules": {
            "core:email": {
              "message": "Please enter a valid email address"
            }
          }
        },
        "name": "email"
      },
      {
        "type": "text",
        "fieldName": "password",
        "options": {
          "rules": {
            "core:minlength": {
              "param": "6",
              "message": "Password must be at least 8 characters"
            }
          }
        },
        "name": "password"
      },
      {
        "type": "text",
        "fieldName": "username",
        "options": {
          "rules": {
            "core:alphanumeric": {
              "message": "Username can only contain letters and numbers"
            },
            "core:nowhitespace": {
              "message": "Username cannot contain spaces"
            }
          }
        },
        "name": "username"
      },
      {
        "type": "text",
        "name": "key"
      },
      {
        "type": "number",
        "name": "userId"
      },
      {
        "type": "number",
        "name": "modifedBy"
      },
      {
        "type": "datetime",
        "name": "modifiedDate"
      },
      {
        "type": "text",
        "fieldName": "role",
        "options": {
          "rules": {}
        },
        "name": "role"
      },
      {
        "type": "number",
        "name": "modifiedBy"
      },
      {
        "type": "text",
        "name": "ver"
      }
    ],
    "$_SESSION": [
      {
        "type": "text",
        "name": "Ses_Ten_Id"
      },
      {
        "type": "number",
        "name": "Ses_Role_Id"
      },
      {
        "type": "number",
        "name": "Ses_Rota_Id"
      },
      {
        "type": "number",
        "name": "Ses_User_Id"
      }
    ]
  },
  "exec": {
    "steps": [
      {
        "name": "",
        "module": "auth",
        "action": "restrict",
        "options": {
          "provider": "sec",
          "permissions": [
            "Adminstrator",
            "SuperAdmin"
          ],
          "loginUrl": "/login",
          "forbiddenUrl": "/unauthorised"
        },
        "disabled": true
      },
      {
        "name": "identity",
        "module": "auth",
        "action": "identify",
        "options": {
          "provider": "sec"
        },
        "output": true,
        "meta": []
      },
      {
        "name": "key",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{TIMESTAMP.sha1('Q2Â£ggkXXZs23')}}"
        },
        "meta": [],
        "outputType": "text"
      },
      {
        "name": "insertUserDets",
        "module": "dbupdater",
        "action": "insert",
        "options": {
          "connection": "db",
          "sql": {
            "type": "insert",
            "values": [
              {
                "table": "tbl_users",
                "column": "fName",
                "type": "text",
                "value": "{{$_POST.fName.capitalize().encrypt(key)}}"
              },
              {
                "table": "tbl_users",
                "column": "lName",
                "type": "text",
                "value": "{{$_POST.lName.capitalize().encrypt(key)}}"
              },
              {
                "table": "tbl_users",
                "column": "userName",
                "type": "text",
                "value": "{{$_POST.username}}"
              },
              {
                "table": "tbl_users",
                "column": "email",
                "type": "text",
                "value": "{{$_POST.email.lowercase().encrypt(key)}}"
              },
              {
                "table": "tbl_users",
                "column": "password",
                "type": "text",
                "value": "{{$_POST.password.sha512('q2WC%kkxZ34v')}}"
              },
              {
                "table": "tbl_users",
                "column": "joinDate",
                "type": "date",
                "value": "{{NOW}}"
              },
              {
                "table": "tbl_users",
                "column": "dateModified",
                "type": "date",
                "value": "{{NOW}}"
              },
              {
                "table": "tbl_users",
                "column": "modifiedBy",
                "type": "number",
                "value": "{{identity}}"
              },
              {
                "table": "tbl_users",
                "column": "imageName",
                "type": "text",
                "value": "dummy"
              }
            ],
            "table": "tbl_users",
            "returning": "userId",
            "query": "insert into `tbl_users` (`dateModified`, `email`, `fName`, `imageName`, `joinDate`, `lName`, `modifiedBy`, `password`, `userName`) values (?, ?, ?, ?, ?, ?, ?, ?, ?)",
            "params": [
              {
                "name": ":P1",
                "type": "expression",
                "value": "{{$_POST.fName.capitalize().encrypt(key)}}",
                "test": ""
              },
              {
                "name": ":P2",
                "type": "expression",
                "value": "{{$_POST.lName.capitalize().encrypt(key)}}",
                "test": ""
              },
              {
                "name": ":P3",
                "type": "expression",
                "value": "{{$_POST.username}}",
                "test": ""
              },
              {
                "name": ":P4",
                "type": "expression",
                "value": "{{$_POST.email.lowercase().encrypt(key)}}",
                "test": ""
              },
              {
                "name": ":P5",
                "type": "expression",
                "value": "{{$_POST.password.sha512('q2WC%kkxZ34v')}}",
                "test": ""
              },
              {
                "name": ":P6",
                "type": "expression",
                "value": "{{NOW}}",
                "test": ""
              },
              {
                "name": ":P7",
                "type": "expression",
                "value": "{{NOW}}",
                "test": ""
              },
              {
                "name": ":P8",
                "type": "expression",
                "value": "{{identity}}",
                "test": ""
              }
            ]
          }
        },
        "meta": [
          {
            "name": "identity",
            "type": "text"
          },
          {
            "name": "affected",
            "type": "number"
          }
        ],
        "collapsed": true,
        "output": true
      },
      {
        "name": "wait",
        "module": "core",
        "action": "wait",
        "options": {
          "delay": 1500
        }
      },
      {
        "name": "userID",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{insertUserDets.identity}}"
        },
        "meta": [],
        "outputType": "number",
        "output": true
      },
      {
        "name": "wait_copy",
        "module": "core",
        "action": "wait",
        "options": {
          "delay": 1500
        },
        "collapsed": true
      },
      {
        "name": "insertKey",
        "module": "dbupdater",
        "action": "insert",
        "options": {
          "connection": "db",
          "sql": {
            "type": "insert",
            "values": [
              {
                "table": "tbl_ek",
                "column": "key",
                "type": "text",
                "value": "{{key}}"
              },
              {
                "table": "tbl_ek",
                "column": "userId",
                "type": "number",
                "value": "{{userID}}"
              }
            ],
            "table": "tbl_ek",
            "query": "insert into `tbl_ek` (`key`, `userId`) values (?, ?)",
            "params": [
              {
                "name": ":P1",
                "type": "expression",
                "value": "{{key}}",
                "test": ""
              },
              {
                "name": ":P2",
                "type": "expression",
                "value": "{{userID}}",
                "test": ""
              }
            ],
            "returning": "ekId"
          }
        },
        "meta": [
          {
            "name": "identity",
            "type": "text"
          },
          {
            "name": "affected",
            "type": "number"
          }
        ],
        "collapsed": true
      },
      {
        "name": "insertDetails",
        "module": "dbupdater",
        "action": "insert",
        "options": {
          "connection": "db",
          "sql": {
            "type": "insert",
            "values": [
              {
                "table": "tbl_user_dets",
                "column": "userId",
                "type": "number",
                "value": "{{userID}}"
              },
              {
                "table": "tbl_user_dets",
                "column": "modifiedBy",
                "type": "number",
                "value": "{{$_POST.modifiedBy}}",
                "condition": "{{identity}}"
              },
              {
                "table": "tbl_user_dets",
                "column": "dateModified",
                "type": "text",
                "value": "{{NOW}}"
              }
            ],
            "table": "tbl_user_dets",
            "returning": "usrDetsId",
            "query": "insert into `tbl_user_dets` (`dateModified`, `modifiedBy`, `userId`) values (?, ?, ?)",
            "params": [
              {
                "name": ":P1",
                "type": "expression",
                "value": "{{userID}}",
                "test": ""
              },
              {
                "name": ":P2",
                "type": "expression",
                "value": "{{$_POST.modifiedBy}}",
                "test": ""
              },
              {
                "name": ":P3",
                "type": "expression",
                "value": "{{NOW}}",
                "test": ""
              }
            ]
          }
        },
        "meta": [
          {
            "name": "identity",
            "type": "text"
          },
          {
            "name": "affected",
            "type": "number"
          }
        ],
        "collapsed": true
      },
      {
        "name": "insertUserTenant",
        "module": "dbupdater",
        "action": "insert",
        "options": {
          "connection": "db",
          "sql": {
            "type": "insert",
            "values": [
              {
                "table": "tbl_user_tenant",
                "column": "userId",
                "type": "number",
                "value": "{{userID}}"
              },
              {
                "table": "tbl_user_tenant",
                "column": "tenantId",
                "type": "text",
                "value": "{{$_SESSION.Ses_Ten_Id}}"
              },
              {
                "table": "tbl_user_tenant",
                "column": "modifedBy",
                "type": "number",
                "value": "{{identity}}"
              },
              {
                "table": "tbl_user_tenant",
                "column": "modifiedDate",
                "type": "datetime",
                "value": "{{NOW}}"
              }
            ],
            "table": "tbl_user_tenant",
            "returning": "usrTenId",
            "query": "insert into `tbl_user_tenant` (`modifedBy`, `modifiedDate`, `tenantId`, `userId`) values (?, ?, ?, ?)",
            "params": [
              {
                "name": ":P1",
                "type": "expression",
                "value": "{{userID}}",
                "test": ""
              },
              {
                "name": ":P2",
                "type": "expression",
                "value": "{{$_SESSION.Ses_Ten_Id}}",
                "test": ""
              },
              {
                "name": ":P3",
                "type": "expression",
                "value": "{{identity}}",
                "test": ""
              },
              {
                "name": ":P4",
                "type": "expression",
                "value": "{{NOW}}",
                "test": ""
              }
            ]
          }
        },
        "meta": [
          {
            "name": "identity",
            "type": "text"
          },
          {
            "name": "affected",
            "type": "number"
          }
        ],
        "collapsed": true
      },
      {
        "name": "insert",
        "module": "dbupdater",
        "action": "insert",
        "options": {
          "connection": "db",
          "sql": {
            "type": "insert",
            "values": [
              {
                "table": "tbl_user_rota",
                "column": "tenantId",
                "type": "number",
                "value": "{{$_SESSION.Ses_Ten_Id}}"
              },
              {
                "table": "tbl_user_rota",
                "column": "rota",
                "type": "number",
                "value": "{{$_SESSION.Ses_Rota_Id}}"
              },
              {
                "table": "tbl_user_rota",
                "column": "modifiedDate",
                "type": "datetime",
                "value": "{{NOW}}"
              },
              {
                "table": "tbl_user_rota",
                "column": "modifiedBy",
                "type": "number",
                "value": "{{identity}}"
              },
              {
                "table": "tbl_user_rota",
                "column": "userId",
                "type": "number",
                "value": "{{userID}}"
              },
              {
                "table": "tbl_user_rota",
                "column": "role",
                "type": "number",
                "value": "{{$_POST.role}}"
              }
            ],
            "table": "tbl_user_rota",
            "returning": "rotaId",
            "query": "insert into `tbl_user_rota` (`modifiedBy`, `modifiedDate`, `role`, `rota`, `tenantId`, `userId`) values (?, ?, ?, ?, ?, ?)",
            "params": [
              {
                "name": ":P1",
                "type": "expression",
                "value": "{{$_SESSION.Ses_Ten_Id}}",
                "test": ""
              },
              {
                "name": ":P2",
                "type": "expression",
                "value": "{{$_SESSION.Ses_Rota_Id}}",
                "test": ""
              },
              {
                "name": ":P3",
                "type": "expression",
                "value": "{{NOW}}",
                "test": ""
              },
              {
                "name": ":P4",
                "type": "expression",
                "value": "{{identity}}",
                "test": ""
              },
              {
                "name": ":P5",
                "type": "expression",
                "value": "{{userID}}",
                "test": ""
              },
              {
                "name": ":P6",
                "type": "expression",
                "value": "{{$_POST.role}}",
                "test": ""
              }
            ]
          }
        },
        "meta": [
          {
            "name": "identity",
            "type": "text"
          },
          {
            "name": "affected",
            "type": "number"
          }
        ],
        "collapsed": true
      },
      {
        "name": "varNewId",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{insertUserDets.identity}}"
        },
        "meta": [],
        "outputType": "text"
      },
      {
        "name": "wait1",
        "module": "core",
        "action": "wait",
        "options": {}
      },
      {
        "name": "preVerifCode",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{TIMESTAMP.md5('E45yT^a').trunc(7, false, '' + 'z').trim()}}"
        },
        "meta": [],
        "outputType": "text"
      },
      {
        "name": "verifCode",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{preVerifCode+'-'+insertUserDets.identity}}"
        },
        "meta": [],
        "outputType": "text"
      },
      {
        "name": "wait2",
        "module": "core",
        "action": "wait",
        "options": {
          "delay": 500
        }
      },
      {
        "name": "updateVerCode",
        "module": "dbupdater",
        "action": "update",
        "options": {
          "connection": "db",
          "sql": {
            "type": "update",
            "values": [
              {
                "table": "tbl_ek",
                "column": "ver",
                "type": "text",
                "value": "{{verifCode}}"
              }
            ],
            "table": "tbl_ek",
            "wheres": {
              "condition": "AND",
              "rules": [
                {
                  "id": "userId",
                  "field": "userId",
                  "type": "double",
                  "operator": "equal",
                  "value": "{{insertUserDets.identity}}",
                  "data": {
                    "column": "userId"
                  },
                  "operation": "="
                }
              ],
              "conditional": null,
              "valid": true
            },
            "returning": "ekId",
            "query": "update `tbl_ek` set `ver` = ? where `userId` = ?",
            "params": [
              {
                "name": ":P1",
                "type": "expression",
                "value": "{{verifCode}}",
                "test": ""
              },
              {
                "operator": "equal",
                "type": "expression",
                "name": ":P2",
                "value": "{{insertUserDets.identity}}",
                "test": ""
              }
            ]
          }
        },
        "meta": [
          {
            "name": "affected",
            "type": "number"
          }
        ],
        "collapsed": true
      },
      {
        "name": "wait2_copy",
        "module": "core",
        "action": "wait",
        "options": {
          "delay": 500
        },
        "collapsed": true
      },
      {
        "name": "qryUserDets",
        "module": "dbconnector",
        "action": "select",
        "options": {
          "connection": "db",
          "sql": {
            "type": "SELECT",
            "columns": [
              {
                "table": "tbl_users",
                "column": "fName"
              },
              {
                "table": "tbl_users",
                "column": "lName"
              },
              {
                "table": "tbl_users",
                "column": "email"
              }
            ],
            "params": [
              {
                "operator": "equal",
                "type": "expression",
                "name": ":P1",
                "value": "{{userID}}",
                "test": ""
              }
            ],
            "table": {
              "name": "tbl_users"
            },
            "primary": "userId",
            "joins": [],
            "wheres": {
              "condition": "AND",
              "rules": [
                {
                  "id": "tbl_users.userId",
                  "field": "tbl_users.userId",
                  "type": "double",
                  "operator": "equal",
                  "value": "{{userID}}",
                  "data": {
                    "table": "tbl_users",
                    "column": "userId",
                    "type": "number",
                    "columnObj": {
                      "type": "increments",
                      "primary": true,
                      "nullable": false,
                      "name": "userId"
                    }
                  },
                  "operation": "="
                }
              ],
              "conditional": null,
              "valid": true
            },
            "query": "select `fName`, `lName`, `email` from `tbl_users` where `tbl_users`.`userId` = ?"
          }
        },
        "output": true,
        "meta": [
          {
            "type": "text",
            "name": "fName"
          },
          {
            "type": "text",
            "name": "lName"
          },
          {
            "type": "text",
            "name": "email"
          }
        ],
        "outputType": "array",
        "collapsed": true
      },
      {
        "name": "varFname",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{qryUserDets[0].fName.decrypt(key)}}"
        },
        "meta": [],
        "outputType": "text",
        "output": true
      },
      "Mailer/mail",
      {
        "name": "",
        "module": "mail",
        "action": "send",
        "options": {
          "instance": "mail",
          "fromName": "Rotario",
          "fromEmail": "admin@rotario.co.uk",
          "toEmail": "{{qryUserDets[0].email}}",
          "body": "Dear {{varFname}} \n\nYou're invited to join the Rotario Volunteer Management System. Log in here to  join. Your verification code is  {{verifCode}}",
          "subject": "Joining instructions for Rotario",
          "toName": "{{varFname}}",
          "contentType": "html",
          "recipientType": "extended",
          "bcc": "daverowe1167@gmail.com"
        },
        "output": true,
        "collapsed": true
      }
    ]
  }
}